{
  "quotes":
  [ 
    "Educators, generals, dieticians, psychologists, and parents program. Armies, students, and some societies are programmed.",
    "To appreciate programming as an intellectual activity in its own right you must turn to computer programming; you must read and write computer programs -- many of them. It doesn't matter much what the programs are about or what applications they serve.",
    "Using Lisp we restrict or limit not what we may program, but only the notation for our program descriptions.",
    "The source of the exhilaration associated with computer programming is the continual unfolding within the mind and on the computer of mechanisms expressed as programs and the explosion of perception they generate.",
    "If art interprets our dreams, the computer executes them in the guise of programs!",
    "Since large programs grow from small ones, it is crucial that we develop an arsenal of standard program structures of whose correctness we have become sure -- we call them idioms -- and learn to combine them into larger structures using organizational techniques of proven value.",
    "These techniques are treated at length in this book, and understanding them is essential to participation in the Promethean enterprise called programming.",
    "Unlike programs, computers must obey the laws of physics. If they wish to perform rapidly -- a few nanoseconds per state change -- they must transmit electrons only small distances (at most 1 1/2 feet).",
    "Our traffic with the subject matter of this book involves us with three foci of phenomena: the human mind, collections of computer programs, and the computer.",
    "Every computer program is a model, hatched in the mind, of a real or mental process. These processes, arising from human experience and thought, are huge in number, intricate in detail, and at any time only partially understood.",
    "This book is dedicated, in respect and admiration, to the spirit that lives in the computer.",
    "Structure and Interpretation of Computer Programs second edition Harold Abelson and Gerald Jay Sussman with Julie Sussman foreword by Alan J. Perlis The MIT Press Cambridge, Massachusetts London, England McGraw-Hill Book Company",
    "I hope the field of computer science never loses its sense of fun. Above all, I hope we don't become missionaries. Don't feel as if you're Bible salesmen. The world has too many of those already.",
    "In this book the use of ``program'' is focused on the creation, execution, and study of programs written in a dialect of Lisp for execution on a digital computer. Using Lisp we restrict or limit not what we may program, but only the notation for our program descriptions.",
    "For all its power, the computer is a harsh taskmaster. Its programs must be correct, and what we wish to say must be said accurately in every detail.",
    "In any event, hardware always operates at a level more primitive than that at which we care to program.",
    "We call such (precise mathematical functions) programs algorithms, and a great deal is known of their optimal behavior, particularly with respect to the two important parameters of execution time and data storage requirements.",
    "Even though some programs resist precise specifications, it is the responsibility of the programmer to estimate, and always to attempt to improve, their performance.",
    "As a result the pyramid must stand unchanged for a millennium; the organism must evolve or perish.",
    "Do not labor under the illusion that this is a text digestible at MIT only, peculiar to the breed found there. It is precisely what a serious book on programming Lisp must be, no matter who the student is or where it is used.",
    "Invent and fit; have fits and reinvent! We toast the Lisp programmer who pens his thoughts within nests of parentheses.",
    "Is it possible that software is not like anything else, that it is meant to be discarded: that the whole point is to always see it as a soap bubble? -Alan J. Perlis",
    "We have seen our students take the ideas and programs in this book and build them in as the core of new computer systems and languages. In literal realization of an ancient Talmudic pun, our students have become our builders.",
    "The World-Wide-Web site www-mitpress.mit.edu/sicp provides support for users of this book. This includes programs from the book, sample programming assignments, supplementary materials, and downloadable implementations of the Scheme dialect of Lisp.",
    "Underlying our approach to this subject is our conviction that ``computer science'' is not a science and that its significance has little to do with computers. The computer revolution is a revolution in the way we think and in the way we express what we think.",
    "Mathematics provides a framework for dealing precisely with notions of ``what is.'' Computation provides a framework for dealing precisely with notions of ``how to.''",
    "In teaching our material we use a dialect of the programming language Lisp. We never formally teach the language, because we don't have to. We just use it, and students pick it up in a few days.",
    "We thank all the generations of Lisp wizards, starting with John McCarthy, who have fashioned a fine tool of unprecedented power and elegance.",
    "We also recognize our debt to the mathematicians who scouted out this territory decades before computers appeared on the scene. These pioneers include Alonzo Church, Barkley Rosser, Stephen Kleene, and Haskell Curry.",
    "We wish to cite John Reynolds and Peter Landin for their insights into the relationship of Church's lambda calculus to the structure of programming languages",
    "We also strongly agree with Alan Perlis that programming is lots of fun and we had better be careful to support the joy of programming.",
    "Our subject is a clear intellectual descendant of ``6.231,'' a wonderful subject on programming linguistics and the lambda calculus taught at MIT in the late 1960s by Jack Wozencraft and Arthur Evans, Jr.",
    "We owe a great debt to Robert Fano, who reorganized MIT's introductory curriculum in electrical engineering and computer science to emphasize the principles of engineering design. He [...] wrote the first set of subject notes from which this book evolved.",
    "Much of the style and aesthetics of programming that we try to teach were developed in conjunction with Guy Lewis Steele Jr., who collaborated with Gerald Jay Sussman in the initial development of the Scheme language.",
    "In addition, David Turner, Peter Henderson, Dan Friedman, David Wise, and Will Clinger have taught us many of the techniques of the functional programming community that appear in this book.",
    "Joel Moses taught us about structuring large systems. His experience with the Macsyma system for symbolic computation provided the insight that one should avoid complexities of control and concentrate on organizing the data to reflect the real structure of the world being modeled",
    "Marvin Minsky and Seymour Papert formed many of our attitudes about programming and its place in our intellectual lives. To them we owe the understanding that computation provides a means of expression for exploring ideas that would otherwise be too complex to deal with precisely",
    "Marvin Minsky and Seymour Papert [...] They emphasize that a student's ability to write and modify programs provides a powerful medium in which exploring becomes a natural activity.",
    "Part of this joy derives from observing great masters at work. We are fortunate to have been apprentice programmers at the feet of Bill Gosper and Richard Greenblatt.",
    "We thank all the lecturers, recitation instructors, and tutors who have worked with us over the past fifteen years and put in many extra hours on our subject -- Bill Siebert, Albert Meyer, Joe Stoy, Randy Davis, Louis Braida, Eric Grimson, Rod Brooks, Lynn Stein, and Peter Szolovits.",
    "Finally, we would like to acknowledge the support of the organizations that have encouraged this work over the years, including support from Hewlett-Packard, made possible by Ira Goldstein and Joel Birnbaum, and support from DARPA, made possible by Bob Kahn.",
    "We are about to study the idea of a computational process. Computational processes are abstract beings that inhabit computers.",
    "As they evolve, processes manipulate other abstract things called data. The evolution of a process is directed by a pattern of rules called a program. People create programs to direct processes. In effect, we conjure the spirits of the computer with our spells.",
    "A computational process is indeed much like a sorcerer's idea of a spirit. It cannot be seen or touched. It is not composed of matter at all. However, it is very real.",
    "A computational process, in a correctly working computer, executes programs precisely and accurately. Thus, like the sorcerer's apprentice, novice programmers must learn to understand and to anticipate the consequences of their conjuring.",
    "Fortunately, learning to program is considerably less dangerous than learning sorcery, because the spirits we deal with are conveniently contained in a secure way. Real-world programming, however, requires care, expertise, and wisdom.",
    "[Master software engineers] can visualize the behavior of their systems in advance. They know how to structure programs so that unanticipated problems do not lead to catastrophic consequences, and when problems do arise, they can debug their programs.",
    "Lisp was invented in the late 1950s as a formalism for reasoning about the use of certain kinds of logical expressions, called recursion equations, as a model for computation. The language was conceived by John McCarthy. [...]",
    "Lisp was not the product of a concerted design effort. Instead, it evolved informally in an experimental manner in response to users' needs and to pragmatic implementation considerations.",
    "Thus, Lisp is by now a family of dialects, which, while sharing most of the original features, may differ from one another in significant ways. The dialect of Lisp used in this book is called Scheme.",
    "Above and beyond these considerations, programming in Lisp is great fun.",
    "A powerful programming language is more than just a means for instructing a computer to perform tasks. The language also serves as a framework within which we organize our ideas about processes.",
    "In programming, we deal with two kinds of elements: procedures and data. (Later we will discover that they are really not so distinct.) Informally, data is ``stuff'' that we want to manipulate, and procedures are descriptions of the rules for manipulating the data.",
    "Imagine that you are sitting at a computer terminal. You type an expression, and the interpreter responds by displaying the result of its evaluating that expression.",
    "If you present Lisp with a number 486 the interpreter will respond by printing 486",
    "Expressions representing numbers may be combined with an expression representing a primitive procedure (such as + or *) to form a compound expression that represents the application of the procedure to those numbers. For example: (+ 137 349) \n 486",
    "(* 25 4 12) \n 1200 \n No ambiguity can arise, because the operator is always the leftmost element and the entire combination is delimited by the parentheses.",
    "It is we humans who get confused by still relatively simple expressions such as  (+ (* 3 (+ (* 2 4) (+ 3 5))) (+ (- 10 7) 6)) which the interpreter would readily evaluate to be 57.",
    "In the Scheme dialect of Lisp, we name things with define. Typing (define size 2) causes the interpreter to associate the value 2 with the name size", 
    "It should be clear that the possibility of associating values with symbols and later retrieving them means that the interpreter must maintain some sort of memory that keeps track of the name-object pairs. This memory is called the environment (more precisely the global environment)",
    "[...] some of the elements that must appear in any powerful programming language: Numbers and arithmetic operations are primitive data and procedures. Nesting of combinations provides a means of combining operations. Definitions that associate names with values provide a limited means of abstraction.",
    "In the words of Alan Perlis, ``Syntactic sugar causes cancer of the semicolon.''",
    "We will usually give predicates names ending with question marks, to help us remember that they are predicates. This is just a stylistic convention. As far as the interpreter is concerned, the question mark is just an ordinary character.",
    "Readers who are worried about the efficiency issues involved in using procedure calls to implement iteration should note the remarks on ``tail recursion'' in section 1.2.1.",
    "The concept of consistent renaming is actually subtle and difficult to define formally. Famous logicians have made embarrassing errors here.",
    "In chapter 3 we will introduce stream processing, which is a way of handling apparently ``infinite'' data structures by incorporating a limited form of normal-order evaluation. In section 4.2 we will modify the Scheme interpreter to produce a normal-order variant of Scheme.",
    "In this book, we do not show the interpreter's response to evaluating definitions, since this is highly implementation-dependent.",
    "Lisp obeys the convention that every expression has a value. This convention, together with the old reputation of Lisp as an inefficient language, is the source of the quip by Alan Perlis [...] that ``Lisp programmers know the value of everything but the cost of nothing.''",
    "Embedded definitions must come first in a procedure body. The management is not responsible for the consequences of running programs that intertwine definition and use.",
    "In chapter 3 we will introduce stream processing, which is a way of handling apparently ``infinite'' data structures by incorporating a limited form of normal-order evaluation.",
    "Exercise 1.6.  Alyssa P. Hacker doesn't see why if needs to be provided as a special form. ``Why can't I just define it as an ordinary procedure in terms of cond?'' she asks.",
    "Like the novice chess player, we don't yet know the common patterns of usage in the domain. We lack the knowledge of which moves are worth making (which procedures are worth defining). We lack the experience to predict the consequences of making a move (executing a procedure).",
    "We have now considered the elements of programming: We have used primitive arithmetic operations, we have combined these operations, and we have abstracted these composite operations by defining them as compound procedures. But that is not enough to enable us to say that we know how to program.",
    "The ability to visualize the consequences of the actions under consideration is crucial to becoming an expert programmer, just as it is in any synthetic, creative activity.",
    "In becoming an expert photographer, for example, one must learn how to look at a scene and know how dark each region will appear on a print for each possible choice of exposure and development conditions.",
    "To become experts, we must learn to visualize the processes generated by various types of procedures. Only after we have developed such a skill can we learn to reliably construct programs that exhibit the desired behavior.",
    "Their role is like that played by test patterns in photography: as oversimplified prototypical patterns, rather than practical examples in their own right.",
    "38 You may wonder why anyone would care about raising numbers to the 1000th power. See section 1.2.6.",
    "Exercise 1.11.  A function f is defined by the rule that f(n) = n if n<3 and f(n) = f(n - 1) + 2f(n - 2) + 3f(n - 3) if n> 3. Write a procedure that computes f by means of a recursive process. Write a procedure that computes f by means of an iterative process.",
    "Exercise 1.14.  Draw the tree illustrating the process generated by the count-change procedure of section 1.2.2 in making change for 11 cents. What are the orders of growth of the space and number of steps used by this process as the amount to be changed increases?",
    "Exercise 1.21.  Use the smallest-divisor procedure to find the smallest divisor of each of the following numbers: 199, 1999, 19999.",
    "48One of the most striking applications of probabilistic prime testing has been to the field of cryptography. Although it is now computationally infeasible to factor an arbitrary 200-digit number, the primality of such a number can be checked in a few seconds with the Fermat test",
    "47 Numbers that fool the Fermat test are called Carmichael numbers, and little is known about them other than that they are extremely rare. There are 255 Carmichael numbers below 100,000,000. The smallest few are 561, 1105, 1729, 2465, 2821, and 6601.",
    "In testing primality of very large numbers chosen at random, the chance of stumbling upon a value that fools the Fermat test is less than the chance that cosmic radiation will cause the computer to make an error in carrying out a ``correct'' algorithm.",
    "Exercise 1.35.  Show that the golden ratio  (section 1.2.2) is a fixed point of the transformation x   1 + 1/x, and use this fact to compute  by means of the fixed-point procedure.",
    "I hope the field of computer science never loses its sense of fun.",
    "Educators, generals, dieticians, psychologists, and parents program. Armies, students, and some societies are programmed.",
    "An assault on large problems employs a succession of programs, most of which spring into existence en route.",
    "The programmer must seek both perfection of part and adequacy of collection.",
    "From Algol we take lexical scoping and block structure, which are gifts from the pioneers of programming-language design who were on the Algol committee. ",
    "Even small errors (usually called bugs or glitches) in programs can have complex and unanticipated consequences.",
    "Well-designed computational systems, like well-designed automobiles or nuclear reactors, are designed in a modular manner, so that the parts can be constructed, replaced, and debugged separately.",
    "Just as our everyday thoughts are usually expressed in our natural language (such as English, French, or Japanese), and descriptions of quantitative phenomena are expressed with mathematical notations, our procedural thoughts will be expressed in Lisp. ",
    "[...] we are able to regard the square procedure as a ``black box.'' We are not at that moment concerned with how the procedure computes its result, only with the fact that it computes the square.",
    "At this level of abstraction, any procedure that computes the square is equally good.",
    "The users of the procedure may not have written the procedure themselves, but may have obtained it from another programmer as a black box. A user should not need to know how the procedure is implemented in order to use it.",
    "In this book, we do not show the interpreter's response to evaluating definitions, since this is highly implementation-dependent.",
    "22 We will usually give predicates names ending with question marks, to help us remember that they are predicates. This is just a stylistic convention. As far as the interpreter is concerned, the question mark is just an ordinary character.",
    "26 The concept of consistent renaming is actually subtle and difficult to define formally. Famous logicians have made embarrassing errors here.",
    "The set of expressions for which a binding defines a name is called the scope of that name.",
    "Our situation is analogous to that of someone who has learned the rules for how the pieces move in chess but knows nothing of typical openings, tactics, or strategy.",
    "Like the novice chess player, we don't yet know the common patterns of usage in the domain. We lack the knowledge of which moves are worth making (which procedures are worth defining). ",
    "We lack the experience to predict the consequences of making a move (executing a procedure).",
    "The ability to visualize the consequences of the actions under consideration is crucial to becoming an expert programmer, just as it is in any synthetic, creative activity.",
    "Only then can one reason backward, planning framing, lighting, exposure, and development to obtain the desired effects.",
    "To become experts, we must learn to visualize the processes generated by various types of procedures.",
    "A procedure is a pattern for the local evolution of a computational process. It specifies how each stage of the process is built upon the previous stage.",
    "We would like to be able to make statements about the overall, or global, behavior of a process whose local evolution has been specified by a procedure.",
    "We will also investigate the rates at which these processes consume the important computational resources of time and space. The procedures we will consider are very simple.",
    "However, the process really is iterative: Its state is captured completely by its three state variables, and an interpreter need keep track of only three variables in order to execute the process.",
    "Exercise 1.11.  A function f is defined by the rule that f(n) = n if n<3 and f(n) = f(n - 1) + 2f(n - 2) + 3f(n - 3) if n> 3. Write a procedure that computes f by means of a recursive process. Write a procedure that computes f by means of an iterative process.",
    "Lamé's Theorem: If Euclid's Algorithm requires k steps to compute the GCD of some pair, then the smaller number in the pair must be greater than or equal to the kth Fibonacci number.43",
    "Since ancient times, mathematicians have been fascinated by problems concerning prime numbers, and many people have worked on the problem of determining ways to test if numbers are prime.",
    "``I don't see what difference that could make,'' says Louis. ``I do.'' says Eva. ``By writing the procedure like that, you have transformed the (log n) process into a (n) process.'' Explain.",
    "42 Euclid's Algorithm is so called because it appears in Euclid's Elements (Book 7, ca. 300 B.C.). According to Knuth (1973), it can be considered the oldest known nontrivial algorithm.",
    "The ancient Egyptian method of multiplication (exercise 1.18) is surely older, but, as Knuth explains, Euclid's algorithm is the oldest known to have been presented as a general algorithm, rather than as a set of illustrative examples.",
    "The resulting RSA algorithm has become a widely used technique for enhancing the security of electronic communications.",
    "Our programs would be able to compute cubes, but our language would lack the ability to express the concept of cubing.",
    "One of the things we should demand from a powerful programming language is the ability to build abstractions by assigning names to common patterns and then to work in terms of the abstractions directly.",
    "This is why all but the most primitive programming languages include mechanisms for defining procedures.",
    "Procedures that manipulate procedures are called higher-order procedures.",
    "Exercise 1.35.  Show that the golden ratio  (section 1.2.2) is a fixed point of the transformation x   1 + 1/x, and use this fact to compute  by means of the fixed-point procedure.",
    "In 1737, the Swiss mathematician Leonhard Euler published a memoir De Fractionibus Continuis, which included a continued fraction expansion for e - 2, where e is the base of the natural logarithms.",
    "53 It would be clearer and less intimidating to people learning Lisp if a name more obvious than lambda, such as make-procedure, were used.",
    "But the convention is firmly entrenched. The notation is adopted from the lambda calculus, a mathematical formalism introduced by the mathematical logician Alonzo Church (1941).",   
    "The lambda calculus has become a basic tool for mathematical investigations of the semantics of programming languages.",
    "We now come to the decisive step of mathematical abstraction: we forget about what the symbols stand for. (Hermann Weyl, The Mathematical Way of Thinking)",
    "[The mathematician] need not be idle; there are many operations which he may carry out with these symbols, without ever having to look at the things they stand for. (Hermann Weyl, The Mathematical Way of Thinking)",
    "This is much of the essence of programming.",
    "Programs are typically designed to model complex phenomena, and more often than not one must construct computational objects that have several parts in order to model real-world phenomena that have several aspects.",
    "Data abstraction is a methodology that enables us to isolate how a compound data object is used from the details of how it is constructed from more primitive data objects.",
    "This may seem a curiosity now, but procedural representations of data will play a central role in our programming repertoire.",
    "Exercise 2.16.  Explain, in general, why equivalent algebraic expressions may lead to different answers. Can you devise an interval-arithmetic package that does not have this shortcoming, or is this task impossible? (Warning: This problem is very difficult.)",
    "In general, we can think of data as defined by some collection of selectors and constructors, together with specified conditions that these procedures must fulfill in order to be a valid representation.5",
    "5 Surprisingly, this idea is very difficult to formulate rigorously.",
    "We are using here a powerful strategy of synthesis: wishful thinking.",
    "One of the useful structures we can build with pairs is a sequence -- an ordered collection of data objects.",
    "In this representation, which is called box-and-pointer notation, each object is shown as a pointer to a box. The box for a primitive object contains a representation of the object. For example, the box for a number contains a numeral.",
    "When we began our study of programming in section 1.1, we emphasized the importance of describing a language by focusing on the language's primitives, its means of combination, and its means of abstraction. We'll follow that framework here.",
    "Before we can show how to implement painters and their means of combination, we must first consider frames.",
    "6 The use of the word ``closure'' here comes from abstract algebra, where a set of elements is said to be closed under an operation if applying the operation to elements in the set produces an element that is again an element of the set.",
    "The Lisp community also (unfortunately) uses the word ``closure'' to describe a totally unrelated concept: A closure is an implementation technique for representing procedures with free variables. We do not use the word ``closure'' in this second sense in this book.",
    "Richard Waters (1979) developed a program that automatically analyzes traditional Fortran programs, viewing them in terms of maps, filters, and accumulations. He found that fully 90 percent of the code in the Fortran Scientific Subroutine Package fits neatly into this paradigm.",
    "10 It's remarkable how much energy in the standardization of Lisp dialects has been dissipated in arguments that are literally over nothing: Should nil be an ordinary name?",
    "23 William Barton Rogers (1804-1882) was the founder and first president of MIT.",
    "The world-enforced distinction between the practical and the scientific worker is utterly futile, and the whole experience of modern times has demonstrated its utter worthlessness. (William Barton Rogers (1804-1882))",
    "In this book we don't use many comments; we try to make our programs self-documenting by using descriptive names.",
    "If we tell somebody ``say your name aloud,'' we expect to hear that person's name. However, if we tell somebody ``say `your name' aloud,'' we expect to hear the words ``your name.'' ",
    "32 Allowing quotation in a language wreaks havoc with the ability to reason about the language in simple terms, because it destroys the notion that equals can be substituted for equals.",
    "33 The single quote is different from the double quote we have been using to enclose character strings to be printed. ",
    "41 Exercises 2.63-2.65 are due to Paul Hilfinger.",
    "Exercise 2.70.  The following eight-symbol alphabet with associated relative frequencies was designed to efficiently encode the lyrics of 1950s rock songs. (Note that the ``symbols'' of an ``alphabet'' need not be individual letters.)",
    "Get a job / Sha na na na na na na na na / Get a job / Sha na na na na na na na na / Wah yip yip yip yip yip yip yip yip yip / Sha boom -- How many bits are required for the encoding?",
    "[...] since large programs are often created by combining pre-existing modules that were designed in isolation, we need conventions that permit programmers to incorporate modules into larger systems additively, that is, without having to redesign or reimplement these modules.",
    "More importantly, programming systems are often designed by many people working over extended periods of time, subject to requirements that change over time.",
    "(Even while it changes, it stands still.) Heraclitus",
    "Effective program synthesis also requires organizational principles that can guide us in formulating the overall design of a program.",
    "If we have been successful in our system organization, then to add a new feature or debug an old one we will have to work on only a localized part of the system.",
    "The first organizational strategy concentrates on objects, viewing a large system as a collection of distinct objects whose behaviors may change over time.",
    "An alternative organizational strategy concentrates on the streams of information that flow in the system, much as an electrical engineer views a signal-processing system.",
    "A bank account, for example, has state in that the answer to the question ``Can I withdraw $100?'' depends upon the history of deposit and withdrawal transactions.",
    "We ordinarily view the world as populated by independent objects, each of which has a state that changes over time.",
    "In a simple banking system, we could characterize the state of an account by a current balance rather than by remembering the entire history of account transactions.",
    "If we choose to model the flow of time in the system by the elapsed time in the computer, then we must have a way to construct computational objects whose behaviors change as our programs run.",
    "The general phenomenon illustrated by the Monte Carlo example is this: From the point of view of one part of a complex process, the other parts appear to change with time.",
    "Encapsulation reflects the general system-design principle known as the hiding principle: One can make a system more modular and robust by protecting parts of the system from each other",
    "This may be a vestige of a belief, common throughout the 1960s and 1970s, that programs that call procedures must inherently be less efficient than programs that perform assignments.",
    "Whatever the reason, it often saddles beginning programmers with ``should I set this variable before or after that one'' concerns that can complicate programming and obscure the important ideas.",
    "In general, programming with assignment forces us to carefully consider the relative orders of the assignments to make sure that each statement is using the correct version of the variables that have been changed. This issue simply does not arise in functional programs.11",
    "[...]  in the presence of assignment, a variable can no longer be considered to be merely a name for a value. Rather, a variable must somehow designate a ``place'' in which values can be stored. ",
    "The central issue lurking beneath the complexity of state, sameness, and change is that by introducing assignment we are forced to admit time into our computational models.",
    "The fact of concurrent execution, either because the world operates in parallel or because our computers do, entails additional complexity in our understanding of time.",
    "35 To quote some graffiti seen on a Cambridge building wall: ``Time is a device that was invented to keep everything from happening at once.''",
    "It is intriguing that a similar connection between time and communication also arises in the Theory of Relativity, where the speed of light (the fastest signal that can be used to synchronize events) is a fundamental constant relating time and space",
    "In essence, any notion of time in concurrency control must be intimately tied to communication.51",
    "51 For distributed systems, this perspective was pursued by Lamport (1978), who showed how to use communication to establish ``global clocks'' that can be used to establish orderings on events in distributed systems.",
    "Situations where deadlock cannot be avoided require deadlock-recovery methods, which entail having processes ``back out'' of the deadlocked state and try again.",
    "The fact of concurrent execution, either because the world operates in parallel or because our computers do, entails additional complexity in our understanding of time.",
    "45 In most time-shared operating systems, processes that are blocked by a mutex do not waste time ``busy-waiting'' as above. Instead, the system schedules another process to run while the first is waiting, and the blocked process is awakened when the mutex becomes available.",
    "55 This should bother you.",
    "73 Similarly in physics, when we observe a moving particle, we say that the position (state) of the particle is changing. However, from the perspective of the particle's world line in space-time there is no change involved.",
    "... It's in words that the magic is -- Abracadabra, Open Sesame, and the rest -- but the magic words in one story aren't magical in the next. The real magic is to understand which words work, and when, and for what; the trick is to learn the trick.",
    ".. And those words are made from the letters of our alphabet: a couple-dozen squiggles we can draw with the pen. This is the key! And the treasure, too, if we can only get our hands on it! It's as if -- as if the key to the treasure is the treasure!",
    "However, as we confront increasingly complex problems, we will find that Lisp, or indeed any fixed programming language, is not sufficient for our needs. ",
    "Metalinguistic abstraction -- establishing new languages -- plays an important role in all branches of engineering design.",
    "It is particularly important to computer programming, because in programming not only can we formulate new languages but we can also implement these languages by constructing evaluators. ",
    "An evaluator (or interpreter) for a programming language is a procedure that, when applied to an expression of the language, performs the actions required to evaluate that expression.",
    "The evaluator, which determines the meaning of expressions in a programming language, is just another program. To appreciate this point is to change our images of ourselves as programmers.",
    "Establishing new languages is a powerful strategy for controlling complexity in engineering design;",
    "In this language of nondeterministic computing, it is natural to express processes that generate all possible values for expressions and then search for those values that satisfy certain constraints.",
    " In terms of models of computation and time, this is like having time branch into a set of ``possible futures'' and then searching for appropriate time lines.",
    "For the evaluator, this means that the syntax of the language being evaluated is determined solely by the procedures that classify and extract pieces of expressions.",
    "The job of the evaluator is not to specify the primitives of the language, but rather to provide the connective tissue -- the means of combination and the means of abstraction -- that binds a collection of primitives to form a language.",
    "31 Snarf: ``To grab, especially a large document or file for the purpose of using it either with or without the owner's permission.'' Snarf down: ``To snarf, sometimes with the connotation of absorbing, processing, or understanding.'' ",
    "34 The word thunk was invented by an informal working group that was discussing the implementation of call-by-name in Algol 60. ",
    "Exercise 4.30.  Cy D. Fect, a reformed C programmer, is worried that some side effects may never take place, because the lazy evaluator doesn't force the expressions in a sequence.",
    "The basic idea is that, when applying a procedure, the interpreter must determine which arguments are to be evaluated and which are to be delayed.",
    "The process of evaluating the expression in a thunk is called forcing.35",
    "in addition, the embedding enables the designer to snarf31 features from the underlying language, just as our embedded Lisp evaluator uses primitives and control structure from the underlying Lisp. ",
    "Exercise 4.44.  Exercise 2.42 described the ``eight-queens puzzle'' of placing queens on a chessboard so that no two attack each other. Write a nondeterministic program to solve this puzzle.",
    "The key idea here is that expressions in a nondeterministic language can have more than one possible value",
    "46 Automagically: ``Automatically, but in a way which, for some reason (typically because it is too complicated, or too ugly, or perhaps even too trivial), the speaker doesn't feel like explaining.'' (Steele 1983, Raymond 1993)",
    " In 1964 a megabyte of RAM cost about $400,000. Now every personal computer has many megabytes of RAM, and most of the time most of that RAM is unused. It is hard to underestimate the cost of mass-produced electronics.",
    "From the perspective of the programmer designing the code, the nondeterministic choice potentially returns all possible values, and the computation branches so that each value is investigated separately.",
    "61 Interest in logic programming peaked during the early 80s when the Japanese government began an ambitious project aimed at building superfast computers optimized to run logic programming languages.",
    "See Feigenbaum and Shrobe 1993 for an overview evaluation of the Japanese project.",
    "Logic programming extends this idea by combining a relational vision of programming with a powerful kind of symbolic pattern matching called unification.58",
    "My aim is to show that the heavenly machine is not a kind of divine, live being, but a kind of clockwork [...] (Johannes Keppler)",
    "When a data object is no longer needed, the memory allocated to it is automatically recycled and used to construct new data objects.",
    "17 The term broken heart was coined by David Cressey, who wrote a garbage collector for MDL, a dialect of Lisp developed at MIT during the early 1970s.",
    "32 In UNIX TM the system ``dumps core,'' and in DOS/Windows TM it becomes catatonic. The Macintosh TM displays a picture of an exploding bomb and offers you the opportunity to reboot the computer -- if you're lucky.",
    "This is analogous to the computer crashing when a user program makes an error.32",
    "As a result, it falls to programmers to explicitly provide error checking. Unfortunately, people often neglect to do this, even in critical applications where speed is not a constraint. Their programs lead fast and dangerous lives.",
    "For example, the notorious ``Worm'' that paralyzed the Internet in 1988 exploited the UNIX TM operating system's failure to check whether the input buffer has overflowed in the finger daemon. (See Spafford 1989.)",
    "A good compiler should be able to produce code with such checks, should avoid redundant checks, and should allow programmers to control the extent and type of error checking in the compiled code.",
    "Tracking down the source of differences is fun but often frustrating, because the results are extremely sensitive to minuscule details.",
    "Any inaccuracies in this index may be explained by the fact that it has been prepared with the help of a computer. Donald E. Knuth, Fundamental Algorithms (Volume 1 of The Art of Computer Programming)",
    "For all its power, the computer is a harsh taskmaster.",
    "Note that this is a text about programming, unlike most Lisp books, which are used as a preparation for work in artificial intelligence.",
    "First, we want to establish the idea that a computer language is not just a way of getting a computer to perform operations but rather that it is a novel formal medium for expressing ideas about methodology.",
    "We never formally teach the language, because we don't have to. We just use it, and students pick it up in a few days.",
    "[Students] should be capable of reading a 50-page-long program, if it is written in an exemplary style. They should know what not to read, and what they need not understand at any moment.",
    "Thus, programs must be written for people to read, and only incidentally for machines to execute.",
    "Our goal is that students who complete this subject should have a good feel for the elements of style and the aesthetics of programming.",
    "Computer programs are good, they say, for particular purposes, but they aren't flexible. Neither is a violin, or a typewriter, until you learn how to use it. (Marvin Minsky)",
    "We thank all the generations of Lisp wizards, starting with John McCarthy, who have fashioned a fine tool of unprecedented power and elegance.",
    "This bot is written with the help of glitch community, quotes compiled by Erik L. aka pineappledreams. Tokyo 2018."
]
}